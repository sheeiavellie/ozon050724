type Post {
    id: Int!
    title: String!
    authorId: Int
    content: String!
    createdAt: String!
    canBeCommented: Boolean!
    comments: [Comment!]
}

type Comment {
    id: Int!
    postId: Int!
    authorId: Int
    content: String!
    createdAt: String!
    replyComments: [Comment!]!
}

type Query {
    post(id: Int!): Post!
    posts: [Post!]!

    comment(id: Int!): Comment!
    comments(postId: Int!): [Comment!]!
}

input NewPost {
    title: String!
    authorId: Int
    content: String!
    canBeCommented: Boolean!
}

input NewComment {
    postId: Int!
    authorId: Int
    content: String!
    parentCommentId: Int
}

type Mutation {
    createPost(input: NewPost!): Post!
    createComment(input: NewComment!): Comment!

    # I assume it's necessary because user can disable commenting
    updatePost(postId: Int!): Post! 
}

